# This workflow will test backend and then, build and deploy container to ECR/ECS

name: CaptionAI Backend CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: captionai
  ECS_SERVICE: captionai-service
  ECS_CLUSTER: captionai-cluster

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: run dev build
        run: docker-compose -f dev/docker-compose.test.yml up --build -d

      - name: run tests
        run: docker exec backend python manage.py test

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [test]

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build, tag and push docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: backend_${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: update ECS task definition with new image
        id: update-td
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: prod/ecs/task_definition.json
          container-name: backend
          image: ${{ steps.build-image.outputs.image }}

      - name: deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-td.outputs.task-definition }}
          service: $ECS_SERVICE
          cluster: $ECS_CLUSTER
          wait-for-service-stability: true
